


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             sum_of_product, CODE, READONLY
    2 00000000                 ENTRY
    3 00000000                 EXPORT           __main
    4 00000000         
    5 00000000         ;;; find product of sume of 2 array
    6 00000000         __main
    7 00000000         
    8 00000000 F04F 0003       mov              r0, #3
    9 00000004 2803            cmps             r0, #3
   10 00000006         
   11 00000006         
   12 00000006 F04F 01AA       mov              r1, #0xaa   ;;MOV  R0, #5 ; N=5
                                                            
   13 0000000A 4911            LDR              R1, =X
   14 0000000C 4A11            LDR              R2, =Y
   15 0000000E F04F 0500       MOV              R5, #0      ; LOW RESULT
   16 00000012 F04F 0600       MOV              R6, #0      ; HIGH 32BIT RESULT
                                                            
   17 00000016         
   18 00000016 F851 3B04 
                       NEXT    LDR              R3, [R1], #4 ; postInc R3<=[MEM
                                                             R1] & R1<-R1+4(ADD
                                                            R+4)
   19 0000001A F852 4B04       LDR              R4, [R2], #4
   20 0000001E         
   21 0000001E         
   22 0000001E         ;; SUM = SUM + X*Y
   23 0000001E FBE3 5604       UMLAL            R5, R6, R3, R4 ; UNSIGNED MUL A
                                                            CCUMULATED LONG
   24 00000022 3801            SUBS             R0, #1
   25 00000024 D1F7            BNE              NEXT
   26 00000026         
   27 00000026 E7FE    B1      B                B1
   28 00000028         
   29 00000028 00000001 
              00000002 
              00000003 
              00000004 
              00000005 X       DCD              1,2,3,4,5   ;;; DEFINE CONSTANT
                                                             DOUBLE WORD(32BIT)
                                                            
   30 0000003C 00000001 
              00000002 
              00000003 
              00000004 
              00000005 Y       DCD              1,2,3,4,5
   31 00000050         
   32 00000050                 END
              00000000 
              00000000 
Command Line: --debug --xref --cpu=Cortex-M3 --apcs=interwork --depend=MULTIPLY
.d -oMULTIPLY.o -IC:\Keil_v460\ARM\RV31\INC -IC:\Keil_v460\ARM\CMSIS\Include -I
C:\Keil_v460\ARM\Inc\ST\STM32F10x --predefine="__MICROLIB SETA 1" --list=MULTIP
LY.lst MULTIPLY.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

B1 00000026

Symbol: B1
   Definitions
      At line 27 in file MULTIPLY.s
   Uses
      At line 27 in file MULTIPLY.s
Comment: B1 used once
NEXT 00000016

Symbol: NEXT
   Definitions
      At line 18 in file MULTIPLY.s
   Uses
      At line 25 in file MULTIPLY.s
Comment: NEXT used once
X 00000028

Symbol: X
   Definitions
      At line 29 in file MULTIPLY.s
   Uses
      At line 13 in file MULTIPLY.s
Comment: X used once
Y 0000003C

Symbol: Y
   Definitions
      At line 30 in file MULTIPLY.s
   Uses
      At line 14 in file MULTIPLY.s
Comment: Y used once
__main 00000000

Symbol: __main
   Definitions
      At line 6 in file MULTIPLY.s
   Uses
      At line 3 in file MULTIPLY.s
Comment: __main used once
sum_of_product 00000000

Symbol: sum_of_product
   Definitions
      At line 1 in file MULTIPLY.s
   Uses
      None
Comment: sum_of_product unused
6 symbols
339 symbols in table
